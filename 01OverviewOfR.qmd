# Overview and Getting Started

## Overview of R programming?

1.  R is a programming language and open-source software environment for statistical computing, data analysis, and visualization. It was created by Ross Ihaka and Robert Gentleman at the University of Auckland in New Zealand in the early 1990s.

2.  R offers an extensive array of statistical and graphical techniques, such as linear and nonlinear modeling, classical statistical tests, time-series analysis, and clustering, among others. In addition, it supports data manipulation, data import/export, and multiple data formats.

3.  It is frequently employed in the creation of statistical software, data analysis, and data science.

4.  R is an **open-source** project, and the GNU General Public License makes its source code accessible. The S programming language was created at Bell Labs in the 1970s by John Chambers and others. R is an implementation of S.

5.  The Comprehensive R Archive Network (CRAN) provides a significant number of downloadable packages for the extensible programming language R. These products include tools for machine learning, data mining, and visualization.

6.  R is a prominent tool for data analysts, data scientists, statisticians, and researchers in academia, industry, and government. It has a large and active user community that contributes to the maintenance and development of R packages. \[1\]

## Benefits of R

Numerous advantages are associated with mastering R programming:

1.  As an open-source programming language, R is free to use, distribute, and modify. This makes it accessible to anyone, regardless of budget or resources, who desires to learn and use it.

2.  R has a large and active community of users and developers who contribute to its maintenance and development. This community provides an abundance of resources, such as documentation, forums, and packages, making it simpler for users to learn and effectively use R.

3.  R was designed particularly for statistical computing and has a vast array of statistical functions and models built in. In addition, the thousands of available packages on CRAN provide additional statistical tools and methodologies.

4.  R's robust and adaptable graphics system enables users to create high-quality data visualizations for data exploration, analysis, and communication.

5.  Reproducibility: R enables users to write scripts that are readily shareable and reproducible, which increases transparency and facilitates collaboration on data analysis projects.

6.  R is readily compatible with other programming languages, such as Python and SQL, as well as data storage and manipulation tools, such as Hadoop and Spark. \[2\]

## Key Features of R

Among the main characteristics of R programming are:

1.  R is an object-oriented programming language, allowing users to construct and manipulate complex data structures and objects.

2.  R also supports functional programming, allowing users to construct functions as first-class objects and use higher-order functions to create more complex algorithms.

3.  Extensibility: R has a large number of packages available for distribution from the Comprehensive R Archive Network (CRAN). These products include tools for machine learning, data mining, and visualization.

4.  Graphics and visualization: R's robust and adaptable graphics system enables users to generate high-quality visualizations for data exploration, analysis, and communication.

5.  Data manipulation: R offers a vast array of data manipulation tools, including subsetting, merging, reshaping, and aggregating data.

6.  R was designed particularly for statistical computing and has a vast array of built-in statistical functions and models, such as linear and nonlinear modeling, classical statistical tests, time-series analysis, and clustering, among others.

7.  R offers a robust interactive environment, with support for data input/output, data exploration, and data visualization. \[3\]

## Running R locally

Follow these general instructions to run R locally on your computer:

1.  Install and download R

2.  Select an IDE: To write and execute R code, you can use a text editor or a dedicated integrated development environment (IDE). Popular alternatives include RStudio, Emacs, and Vim. RStudio is a free and open-source integrated development environment (IDE) designed specifically for R that is extensively utilized by the R community.

3.  Open your preferred IDE or text editor, and then initiate a new R session. This can be accomplished by typing R at the command prompt or launching a new R script file.

4.  Use your preferred IDE or text editor to write and execute R code. You can execute your code by choosing the "Run" button or by pressing Ctrl+Enter (Windows) or Cmd+Enter (Mac) at the end of each line.

5.  Protect your work: Save your R code to a file for reference and reuse in the future. Your plots and outputs can also be saved to files for use in reports and presentations. \[4\]

### Installing R locally

Follow these general instructions to install R locally on your computer:

1.  Go to the website of the R project: In your web browser, go to the R project website (https://www.r-project.org/).

2.  Select an operating system: On the download page, choose the version of R compatible with your operating system (Windows, Mac, or Linux).

3.  Select a mirror to obtain R from after clicking the download link for your operating system.

4.  Install R: Double-click the downloaded file once the download is complete to begin the installation procedure. Install R on your computer by following the instructions. \[5\]

### RStudio

RStudio is a specialized integrated development environment (IDE) for R programming. It provides an intuitive interface and a suite of tools for R-based data analysis, visualization, and modeling.

Among the features of RStudio are the following:

1.  RStudio has a code editor with syntax highlighting, code completion, and other features that make writing R code simpler.

2.  RStudio offers a data viewer that enables users to observe and investigate their data in a tabular format.

3.  The plots pane in RStudio depicts the graphical outputs generated by R code.

4.  Console pane: The console pane in RStudio displays R code and its output and enables users to execute R commands in an interactive environment.

5.  RStudio provides tools for managing R packages, including the installation, update, and removal of packages.

6.  Version control: RStudio integrates with version control systems like Git, enabling users to manage and collaborate on their code.

7.  Shiny applications: RStudio allows users to create interactive web applications using the Shiny web development utility for R. \[6\]

To install RStudio locally on your computer, you can follow these general steps:

1.  Download R: Before you can install RStudio, you will need to download and install R. You can download the appropriate version of R for your operating system from the R project website (https://www.r-project.org/).

2.  Download RStudio: Go to the RStudio download page (https://www.rstudio.com/products/rstudio/download/) and select the appropriate version of RStudio for your operating system.

3.  Install RStudio: Once the RStudio installer has downloaded, run the installer and follow the instructions to install RStudio on your computer.

4.  Open RStudio: Once the installation is complete, open RStudio by double-clicking the RStudio icon on your desktop or in your Applications folder.

5.  Start an R session: In RStudio, click on the Console tab to start an R session. You can then type R commands in the console and run them using the "Run" button or by pressing Ctrl+Enter (Windows) or Cmd+Enter (Mac). \[7\]

## Running R in the Cloud

1. Running R in the cloud enables users to access R and RStudio from any location with an internet connection, without deploying R locally. 

2. Numerous cloud service providers offer virtual machines (VMs) with pre-installed R and RStudio. Amazon Web Services (AWS), Microsoft Azure, and Google Cloud Platform (GCP) are popular options.

Depending on the user's use case and requirements, running R in the cloud provides a variety of advantages and disadvantages. Here are some general advantages and disadvantages of cloud-based R:

**Benefits:**

1.  Scalability: Cloud service providers provide scalable computing resources that can be adjusted to satisfy the requirements of a specific workload. This can be especially beneficial for data-intensive tasks that demand a great deal of computing power.

2.  Running R in the cloud enables users to access R and RStudio from any location with an internet connection, making it simple to collaborate on projects and share data.

3.  Cloud providers offer flexible pricing models that may be more cost-effective than running R on local hardware, especially for short-term or infrequent use cases.

4.  Security: Cloud service providers offer a variety of security features, including firewalls and encryption, to safeguard data and applications from unauthorized access or attacks. \[8\]

**Drawbacks:**

1.  Running R in the cloud requires a stable internet connection, which may not be accessible at all times or in all locations. This can hinder the ability to work on initiatives involving data analysis and modeling.

2.  Running R in the cloud necessitates familiarity with cloud computing platforms and tools, which can necessitate a steep learning curve for users new to cloud computing.

3.  Data privacy: Storing data in the cloud may raise concerns about data privacy, particularly for sensitive or confidential data. Cloud service providers offer security features, but users must be aware of the risks and secure their data accordingly.

4.  Although cloud computing can be cost-effective in certain circumstances, it can also be costly for long-term or high-volume use cases, especially if data storage or other resources are required in addition to computing capacity. \[8\]

### Cloud Service Providers -- Posit, AWS, Azure, GCP

Posit is a comparatively new cloud service provider that offers high-performance computing resources for data-intensive applications. AWS, Azure, and GCP are three of the most prominent cloud service providers, each of which offers a variety of services and features for running cloud-based applications. Here is a comparison of the four service providers:

**Posit:**

1.  Provides computing resources with high efficacy for data-intensive applications

2.  Provides bare-metal instances for superior performance and adaptability

3.  Dedicated to data security and compliance

4.  Offers hardware configurations tailored to specific duties.

**AWS:**

1.  Provides a variety of cloud computing services, such as computing, storage, and database services

2.  A large and active user community with an abundance of resources and assistance.

3.  Includes pay-as-you-go and reserved instance pricing options.

4.  Offers a variety of tools and services for administering and securing cloud-based applications

**Azure:**

1.  Provides a variety of cloud computing services, such as computing, storage, and networking Integrates tightly with Microsoft's enterprise software and services.

2.  Provides flexible pricing models, including pay-as-you-go, reserved instance, and spot instance pricing

3.  Provides a variety of tools and services for managing and securing cloud-based applications

**GCP:**

1.  Provides a variety of cloud computing services, such as computing, storage, and networking

2.  Includes a variety of tools and services for machine learning and artificial intelligence.

3.  Offers flexible pricing models, including pay-as-you-go and sustained use pricing

4.  Provides a variety of tools and services for managing and securing cloud-based applications. \[9\]

### General Instructions for operating R in the cloud

1.  Choose a cloud service provider.

2.  Once you have selected a cloud service provider, you can construct a virtual machine with R and RStudio already installed. The precise steps for creating a virtual machine will differ depending on the provider you select, but the majority of providers offer an intuitive interface for creating and configuring virtual machines.

3.  Once the virtual machine is operational, you can connect to it using a web browser or remote desktop software. This should be accompanied by instructions from the provider.

4.  Start a R session: Once you are connected to the virtual machine, you can use RStudio or the R console to launch a R session.

5.  You can transfer your data to the virtual machine and then access it through RStudio or the R console. You can also connect to external data sources with R programs like DBI and odbc. \[9\]

## References

\[1\]

Ihaka, R., & Gentleman, R. (1996). R: A language for data analysis and graphics. Journal of Computational and Graphical Statistics, 5(3), 299-314. https://www.jstor.org/stable/1390807

\[2\]

Peng, R. D. (2016). R programming for data science. O'Reilly Media.

Venables, W. N., Smith, D. M., & R Development Core Team. (2019). An introduction to R. Network Theory Ltd. Retrieved from https://cran.r-project.org/doc/manuals/r-release/R-intro.pdf

Wickham, H. (2016). ggplot2: Elegant graphics for data analysis. Springer-Verlag.

Gandrud, C. (2015). Reproducible research with R and RStudio. CRC Press.

Grolemund, G., & Wickham, H. (2017). R for data science: Import, tidy, transform, visualize, and model data. O'Reilly Media.

\[3\]

Chambers, J. M. (2016). Extending R (2nd ed.). CRC Press.

Wickham, H., & Grolemund, G. (2017). R packages: Organize, test, document, and share your code. O'Reilly Media.

Murrell, P. (2006). R graphics. CRC Press.

Wickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10), 1-23.

Venables, W. N., Smith, D. M., & R Development Core Team. (2019). An introduction to R. Network Theory Ltd. Retrieved from https://cran.r-project.org/doc/manuals/r-release/R-intro.pdf

R Core Team (2020). R: A language and environment for statistical computing. R Foundation for Statistical Computing, Vienna, Austria. https://www.R-project.org/

\[4\]

The R Project for Statistical Computing. (2021). Download R for (Mac) OS X. https://cran.r-project.org/bin/macosx/

RStudio. (2021). RStudio. https://www.rstudio.com/

R Core Team (2020). R: A language and environment for statistical computing. R Foundation for Statistical Computing, Vienna, Austria. https://www.R-project.org/

Peng, R. D. (2016). R programming for data science. O'Reilly Media.

Gandrud, C. (2015). Reproducible research with R and RStudio. CRC Press.

\[5\]

The R Project for Statistical Computing. (2021). Download R for (Mac) OS X. https://cran.r-project.org/bin/macosx/

The R Project for Statistical Computing. (2021). Download R for Windows. https://cran.r-project.org/bin/windows/base/

The R Project for Statistical Computing. (2021). Download R for Linux. https://cran.r-project.org/bin/linux/

RStudio. (2021). RStudio. https://www.rstudio.com/products/rstudio/download/

Peng, R. D. (2016). R programming for data science. O'Reilly Media.

\[6\]

RStudio. (2021). RStudio. https://www.rstudio.com/products/rstudio/features/

Peng, R. D. (2016). R programming for data science. O'Reilly Media.

Wickham, H. (2014). Tidy data. Journal of Statistical Software, 59(10), 1-23.

Wickham, H., & Grolemund, G. (2017). R packages: Organize, test, document, and share your code. O'Reilly Media.

Chang, W., & Cheng, J. (2020). R Markdown: The definitive guide. CRC Press.

Chang, W., Cheng, J., Allaire, J. J., Xie, Y., & McPherson, J. (2021). shiny: Web application framework for R. R package version 1.6.0. https://CRAN.R-project.org/package=shiny

\[7\]

The R Project for Statistical Computing. (2021). Download R for (Mac) OS X. https://cran.r-project.org/bin/macosx/

The R Project for Statistical Computing. (2021). Download R for Windows. https://cran.r-project.org/bin/windows/base/

The R Project for Statistical Computing. (2021). Download R for Linux. https://cran.r-project.org/bin/linux/

RStudio. (2021). RStudio. https://www.rstudio.com/products/rstudio/download/

Peng, R. D. (2016). R programming for data science. O'Reilly Media.

\[8\]

Biecek, P., & Kosinski, M. (2018). Mastering Software Development in R. Packt Publishing.

Amazon Web Services. (2021). AWS. https://aws.amazon.com/

Microsoft Azure. (2021). Azure. https://azure.microsoft.com/

Google Cloud Platform. (2021). GCP. https://cloud.google.com/

RStudio. (2021). RStudio Server Pro. https://rstudio.com/products/rstudio-server-pro/

Amazon Web Services. (2021). EC2 User Guide for Linux Instances. https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts.html

Microsoft Azure. (2021). Create a Windows virtual machine with the Azure portal. https://docs.microsoft.com/en-us/azure/virtual-machines/windows/quick-create-portal

Google Cloud Platform. (2021). Compute Engine Documentation. https://cloud.google.com/compute/docs

Amazon Web Services. (2021). Running RStudio Server Pro using Amazon EC2. https://docs.rstudio.com/rsp/quickstart/aws/

\[9\]

Posit. (2021). High-Performance Computing Services. https://posit.cloud/

Amazon Web Services. (2021). AWS. https://aws.amazon.com/

Microsoft Azure. (2021). Azure. https://azure.microsoft.com/

Google Cloud Platform. (2021). GCP. https://cloud.google.com/

Armbrust, M., Fox, A., Griffith, R., Joseph, A. D., Katz, R., Konwinski, A., … Zaharia, M. (2010). A view of cloud computing. Communications of the ACM, 53(4), 50–58. https://doi.org/10.1145/1721654.1721672

Xiao, Z., Chen, Z., & Zhang, J. (2014). Cloud computing research and security issues. Journal of Network and Computer Applications, 41, 1–11. https://doi.org/10.1016/j.jnca.2013.11.004

Cloud Spectator. (2021). Cloud Service Provider Pricing Models: A Comprehensive Guide. https://www.cloudspectator.com/cloud-service-provider-pricing-models-a-comprehensive-guide/


